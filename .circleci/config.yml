version: 2.1

parameters:
  GHA_Action:
    type: string
    default: ""

orbs:
  macos: circleci/macos@2
  android: circleci/android@2.0
  codecov: codecov/codecov@3.2.2

executors:
  base:
    docker:
      - image: docker.io/playerui/bazel-docker
    working_directory: ~/tools
    resource_class: large
    environment:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"

jobs:
  setup:
    executor: base
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{ { checksum "package.json" }}

      - persist_to_workspace:
          root: .
          paths:
            - .

  build:
    executor: base
    steps:
      - attach_workspace:
          at: ~/tools

      - run: bazel build --remote_header=x-buildbuddy-api-key=${BUILDBUDDY_API_KEY} --config=ci -- //...

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{ { checksum "package.json" }}

      - persist_to_workspace:
          root: .
          paths:
            - .

  test:
    executor: base
    steps:
      - attach_workspace:
          at: ~/tools

      - run: bazel test --remote_header=x-buildbuddy-api-key=${BUILDBUDDY_API_KEY} --config=ci -- //...

      - run:
          when: always
          command: |
            RESULTS_DIR=_test_results
            find -L ./bazel-testlogs -name test.xml | while read line
            do
              mkdir -p $RESULTS_DIR/$(dirname $line)
              cp $line $RESULTS_DIR/$(dirname $line)
            done

      - store_test_results:
          path: _test_results

  coverage:
    executor: base
    steps:
      - attach_workspace:
          at: ~/tools

      - restore_cache:
          keys:
            - v1-bazel-cache-core-{{ .Branch }}-{{ .Revision }}
            - v1-bazel-cache-core-{{ .Branch }}
            - v1-bazel-cache-core-main

      - run: |
          BUNDLE_TARGETS=$(bazel query "kind(nodejs_test, //...)" --output label 2>/dev/null | tr '\n' ' ')
          bazel coverage --remote_header=x-buildbuddy-api-key=${BUILDBUDDY_API_KEY} --config=ci -- $BUNDLE_TARGETS

      - codecov/upload:
          file: ./bazel-out/_coverage/_coverage_report.dat

  release:
    executor: base
    steps:
      - attach_workspace:
          at: ~/tools

      - restore_cache:
          keys: 
            - v1-bazel-cache-core-{{ .Branch }}-{{ .Revision }} 
            - v1-bazel-cache-core-{{ .Branch }} 
            - v1-bazel-cache-core-main 

      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run: echo -e $GPG_KEY | gpg --import --batch
      - run: |
            source ~/.bashrc
            npx auto shipit --only-graduate-with-release-label -vv

workflows:
  build_and_test_pr:
    when:
      equal: [ "", << pipeline.parameters.GHA_Action >> ]
    jobs:
      - setup:
          filters:
            branches:
              ignore:
                - main
                - /version-.*/
            tags:
              ignore: /.*/

      - build:
          requires:
            - setup

      - test:
          requires:
            - build

      - coverage:
          requires:
            - build

  build_and_test_main:
    when:
      equal: [ "", << pipeline.parameters.GHA_Action >> ]
    jobs:
      - setup:
          filters:
            branches:
              only:
                - main
                - /version-.*/

      - build:
          requires:
            - setup

      - test:
          requires:
            - build

      - coverage:
          requires:
            - build

      - release:
          context:
            - Publish
          requires:
            - test
            - coverage

  release:
    when:
      equal: [ release, << pipeline.parameters.GHA_Action >> ]
    jobs:
      - setup

      - build:
          requires:
            - setup

      - test:
          requires:
            - build

      - coverage:
          requires:
            - build

      - release:
          context:
            - Publish
          requires:
            - test
            - coverage
            
  canary:
    when:
      equal: [ canary, << pipeline.parameters.GHA_Action >> ]
    jobs:
      - setup

      - build:
          requires:
            - setup

      - release:
          context:
            - Publish
          requires:
            - build